# DDNS配置文件示例 - 支持多级子域名
# 间隔时间（秒）
sleep_secs = 120
# 每隔几次强制从dnspod获取最新的记录
force_get_record_interval = 5

# 默认配置（可选）
# 当域名配置中没有指定token或ip_url时，会使用这些默认值
default_token = "your_default_token_id,your_default_token_secret"
default_ip_url = "https://api.ipify.org"
# 默认IP变化时执行的hook指令（可选）
default_hook_command = "echo \"IP changed to $NEW_IP for $DOMAIN\" >> /var/log/ddns-hook.log"

# 域名配置列表
# 支持多级子域名格式：
# - "sub.example.com" 表示一级子域名记录
# - "api.v2.example.com" 表示二级子域名记录
# - "deep.nested.sub.example.com" 表示多级子域名记录
# - "@.example.com" 或 "example.com" 表示根域名记录
# 每个域名都可以配置独立的hook指令

# 示例1：使用默认token和ip_url的一级子域名
[[domains]]
domain = "blog.example.com"
# 使用默认的hook指令

# 示例2：使用自定义token的根域名，配置SSH重启服务
[[domains]]
domain = "@.mysite.org"                                                    # 等同于 "mysite.org"
token = "custom_token_id,custom_token_secret"
hook_command = "ssh root@server.com \"systemctl restart nginx\""

# 示例3：二级子域名 - API版本控制，配置Telegram通知
[[domains]]
domain = "api.v2.example.com"
token = "another_token_id,another_token_secret"
ip_url = "https://www.arloor.com/ip"
hook_command = "curl -s -X POST https://api.telegram.org/bot<YOUR_BOT_TOKEN>/sendMessage -d chat_id=<YOUR_CHAT_ID> -d text=\"API IP changed: $OLD_IP -> $NEW_IP\""

# 示例4：三级子域名 - 微服务架构，配置WireGuard重启
[[domains]]
domain = "auth.service.k8s.example.com"
ip_url = "https://ip.seeip.org"
hook_command = "ssh root@k8s.example.com \"systemctl restart wg-quick@wg0\""

# 示例5：深层嵌套子域名，执行自定义脚本
[[domains]]
domain = "app.staging.east.aws.example.com"
hook_command = "/path/to/your/custom-script.sh"

# 示例6：特殊情况 - 国际化域名，配置防火墙更新
[[domains]]
domain = "cdn.prod.example.co.uk"
token = "uk_specific_token_id,uk_specific_token_secret"
hook_command = "ssh root@firewall.com \"ufw allow from $NEW_IP && ufw delete allow from $OLD_IP\""
